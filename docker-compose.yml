version: '3.8'

services:
  # API Server
  api-server:
    build: 
      context: ./api-server
      dockerfile: Dockerfile
    container_name: solana-bot-api
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
      - JWT_EXPIRES_IN=24h
      - BCRYPT_ROUNDS=12
      - DATABASE_PATH=/app/data/database.sqlite
      - RATE_LIMIT_WINDOW_MS=900000
      - RATE_LIMIT_MAX=100
      - WEBSOCKET_ENABLED=true
      - WEBSOCKET_MAX_CONNECTIONS=100
      - MAX_BOT_INSTANCES=10
      - METRICS_INTERVAL=30000
      - HEALTH_CHECK_INTERVAL=60000
      - DATA_RETENTION_DAYS=30
    volumes:
      - ./api-server/data:/app/data
      - ./api-server/logs:/app/logs
      - ./api-server/bot-instances:/app/bot-instances
      - ./:/app/trading-bot:ro  # Mount trading bot code as read-only
    depends_on:
      - database
    networks:
      - solana-bot-network

  # Database (SQLite file-based, but keeping for potential future PostgreSQL)
  database:
    image: alpine:latest
    container_name: solana-bot-database
    restart: unless-stopped
    volumes:
      - database-data:/data
    command: ["tail", "-f", "/dev/null"]  # Keep container running
    networks:
      - solana-bot-network

  # Dashboard
  dashboard:
    build: 
      context: ./dashboard
      dockerfile: Dockerfile
    container_name: solana-bot-dashboard
    restart: unless-stopped
    ports:
      - "3001:80"
    environment:
      - REACT_APP_API_URL=http://localhost:3000
      - REACT_APP_WS_URL=http://localhost:3000
    depends_on:
      - api-server
    networks:
      - solana-bot-network

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: solana-bot-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx-logs:/var/log/nginx
    depends_on:
      - api-server
      - dashboard
    networks:
      - solana-bot-network

volumes:
  database-data:
    driver: local
  nginx-logs:
    driver: local

networks:
  solana-bot-network:
    driver: bridge 